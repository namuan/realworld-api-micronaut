plugins {
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

version "0.1"
group "realworld.api.micronaut"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation              "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor         "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor         platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor         "io.micronaut:micronaut-inject-java"
    annotationProcessor         "io.micronaut:micronaut-validation"

    annotationProcessor         "io.micronaut.data:micronaut-data-processor:${micronautDataVersion}"
    compile                     "io.micronaut.data:micronaut-data-hibernate-jpa:${micronautDataVersion}"

    implementation              platform("io.micronaut:micronaut-bom:$micronautVersion")

    implementation              "io.micronaut:micronaut-http-client"
    implementation              "io.micronaut:micronaut-http-server-netty"
    implementation              "io.micronaut:micronaut-inject"
    implementation              "io.micronaut:micronaut-validation"
    implementation              "io.micronaut:micronaut-runtime"
    implementation              "javax.annotation:javax.annotation-api"
    implementation              "io.micronaut.configuration:micronaut-jdbc-hikari"
    implementation              "org.mindrot:jbcrypt:0.4"


    runtimeOnly                 "ch.qos.logback:logback-classic:${logbackClassicVersion}"
    runtime                     "com.h2database:h2"

    testAnnotationProcessor     platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor     "io.micronaut:micronaut-inject-java"

    testImplementation          platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation          "org.junit.jupiter:junit-jupiter-api"
    testImplementation          "io.micronaut.test:micronaut-test-junit5"
    testImplementation          "org.jeasy:easy-random-core:${easyRandomVersion}"
    testImplementation          "org.assertj:assertj-core:${assertjVersion}"

    testRuntimeOnly             "org.junit.jupiter:junit-jupiter-engine"
}

test.classpath += configurations.developmentOnly

mainClassName = "realworld.api.micronaut.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
